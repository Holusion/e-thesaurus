@import "./variables.scss";
@import "client/ui/styles";




*, ::before, ::after {
  box-sizing: border-box;
}

main{
  position: relative;
  max-width: var(--col-width);
  margin: auto;

  color: $color-light;
  min-height: calc(100vh - var(--nav-height) * 2);
  padding-top: .67em;
  
  h1{
    color: $color-primary-light;
  }
}

a{
  color:white;
}

corpus-list, home-page {
  display: block;
  padding: 1rem;
  .list-grid{
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    
    padding-bottom: 50px;
  }
  .drag-overlay{
    position: absolute;
    top:0;
    bottom: 0;
    left: 0;
    right: 0;
    z-index: 2;
    background: rgba(0, 0, 0, 0.3);
    border: 2px dotted $color-secondary;
    border-radius: 4px;
    pointer-events: none;
  }
}


.ff-button.ff-control {
  background: $color-background-light;
  color: white;

  svg {
    fill: white;
  }

  &:hover, &:focus{
    background-color: $color-background-lighter;
  }

  &[selected] {
    background-color: $color-primary;

    &:hover, &:focus {
      background-color: $color-primary-light;
    }
  }

  &.btn-primary {
    background-color: $color-primary;

    &:hover:not(:disabled){
      background-color: $color-primary-light;
    }
  }

  &.btn-secondary {
    background-color: $color-primary-light;

    &:hover:not(:disabled){
      background-color: $color-secondary;
    }
  }

  &.btn-restore {
    background-color: darken($color-primary, 10%);
    color: white;

    &:hover{
      background-color: darken($color-primary, 7%);
    }    
  }

  &.btn-danger {
    background-color: $color-danger;
    color: white;

    &:hover{
      background-color: lighten($color-danger, 7%);
    }    
  }

  @at-root a#{&} {
    text-decoration: none;
    padding: 8px;
    white-space:nowrap;
  }
}


.form-control{

  &form{
    display: flex;
    flex-direction: column;
  }

  .form-group{
    padding: 5px 0;
    &.inline{
      display:flex;
      justify-content: stretch;
      flex-direction: row;
    }
  }

  .ff-button.ff-control{
    margin-top: 5px;
  }

  .divider{
    width: 1px;
    background-color: $color-light;
  }
  .form-item {
    position: relative;
    box-sizing: border-box;
  }

  .form-item > input{
    box-sizing: border-box;
    padding: 0.35rem .75rem;
    display: block;
    width: 100%;
    font-size: 1rem;
    font-weight: 400;
    line-height: 1.5;
    color: $color-light;
    background: $color-dark;
    background-clip: padding-box;
    border-radius: 0;
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    &:invalid:not(:placeholder-shown):not(:focus){
      outline: $color-danger solid 1px;
    }
  }
  .form-item > label{
    opacity: 0.7;
  }

  &.form-modal{
    .form-item > input:not([type="submit"]){
      background: $color-primary;
      height: calc(3.5rem + 2px);
    }
    &[disabled] .form-item > input, .form-item > input:disabled {
      background: $color-primary-dark;
      pointer-events: none;
    }

    .form-item > input::placeholder{
      display:none;
      color: transparent;
    }
    .form-item > input:focus, .form-item > input:not(:placeholder-shown){
      &[type="text"], &[type="password"]{
        padding-top: 1.625rem;
        padding-bottom: .625rem;
      }
    }
    .form-item > input:focus:not(:disabled){
      color: $color-light;
      background-color: var(--color-hover);
      outline: 0;
    }
    
    .form-item > label {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      padding: 5px;
      overflow: hidden;
      text-align: start;
      text-overflow: ellipsis;
      white-space: nowrap;
      pointer-events: none;
      border: 1px solid transparent;
      transform-origin: 0 0;
      transition: opacity .1s ease-in-out,transform .1s ease-in-out;
    }

    input:focus ~ label, input:not(:placeholder-shown) ~label{
      opacity: .65;
    } 
    .form-item{
      input:focus ~ label, input:not(:placeholder-shown) ~label{
        opacity: .65;
        transform: scale(.85) translateY(-.5rem) translateX(.15rem);
      } 
    }

  }
  
  input[type="submit"] {
    background-color: $color-primary-light;
    color: white;
    cursor: pointer;
    &:hover:not(:disabled){
      background: $color-secondary;
    }
  }

  .form-checkbox{
    display: flex;
    input[type="checkbox"] {
      width: 20px;
      height: 20px;
      margin-right: 10px;
    }    
  }


  .form-item > select{
    width: 100%;
    padding: 5px;
    background: none;
    border: none;
    color: inherit;
    cursor: pointer;
  }
}

table.list-table {
  border-collapse: collapse;
  width: 100%;
  display: table;
  background-color: var(--color-medium);
  color: $color-light;
  tr:last-child {
    border-bottom: 0;
  }
  th, td {
    text-align: left;
    padding: 15px;
    box-sizing: border-box;
  }

  th {
    color: $color-light;
    font-weight: bold;
    background-color: $color-dark;
    position: sticky;
    top: 0;
  }
  td {
    border: solid 1px $color-light;
    border-left: 0;
    border-right: 0;
    white-space: nowrap;
  }
  tbody tr{
    transition: background-color 150ms ease-out;
  }
  tbody tr:nth-child(2n){
    background: var(--color-hover);
  }
}

.ff-button .ff-icon{
  fill: currentColor;
}

.ff-button.ff-inline.ff-disabled{
  user-select: none;
  pointer-events: none;
}

#ff-notification-stack {
  color: $color-light;
  .ff-notification > .ff-icon {
    padding: 0;
    margin: 8px;
  }
}

.list-tasks{
  display: flex;
  justify-content: flex-start;
  flex-wrap: wrap;
  gap: 5px;
  .ff-button{
    flex: 0 0 auto;
  }
}

footer{
  color: $color-light;
  height: 44px;
  background-color: $color-dark;
  display:flex;
}