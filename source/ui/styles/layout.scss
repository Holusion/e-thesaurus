

section, .section{
  --section-padding: 1rem;
  --caret-width: 2px;
  position: relative;
  background: var(--color-section);

  &.container{
    max-width: 1200px;
    margin: 1rem auto;
  }

  &::before, &::after{
    content: "";
    position: absolute;
    height: 41px;
    width: 41px;

    pointer-events: none;
    border-color: var(--color-primary);
    border-style: solid;
  }
  &::before{
    top: 0;
    left: 0;
    border-width: var(--caret-width) 0 0 var(--caret-width);
  }
  &::after{
    bottom: 0;
    right: 0;
    border-width: 0 var(--caret-width) var(--caret-width) 0;
  }


  padding: var(--section-padding);
  margin-bottom: var(--section-padding);

  >.flush {
    --flush-margin: calc(-1 * var(--section-padding));
    display:block;
    height: auto;
    width: calc( 100% + 2rem);
    margin-left: var(--flush-margin);
    margin-right: var(--flush-margin);
    &:first-child{
      margin-top: var(--flush-margin);
    }
    &:last-child{
      margin-bottom: var(--flush-margin);
    }
  }

  h1, h2, h3, h4, h5, h6{
    &:first-child{
      margin-top: 0;
    }
  }
  
  
}

.section-column{
  display: flex;
  flex-direction: row;
  @media screen and (max-width: 992px){
    flex-direction: column;
  }
  >.col{
    width: 50%;
    min-width: 0;
  }
}

.main-grid{
  display: grid;
  gap: .5rem;
  grid-auto-rows: auto;
  grid-template-columns: minmax(auto, 300px) 1fr;
  grid-template-areas: 
    '. header'
    'toolbar content';
  
  @media screen and (max-width: 992px){
    grid-template-columns: 1fr auto 1fr;
    grid-template-areas: 
    '. toolbar .'
    '. header .'
    '. content .';
  }
  .grid-header, .grid-toolbar, .grid-content{
    min-width: 0;
  }
  .grid-header{
    grid-area: header;
  }
  .grid-toolbar{
    grid-area: toolbar;
    .section{
      display: flex;
      flex-direction: column;
      gap: 2px;
    }
  }
  .grid-content{
    grid-area: content;
  }
}

.list-tasks{
  display: flex;
  justify-content: flex-start;
  flex-wrap: wrap;
  gap: 5px;
  .ui-button{
    flex: 0 0 auto;
  }
}

.list-grid{
  display:grid;
  gap: 5px;
  grid-template-columns: auto;

  @media (min-width: 610px){
    grid-template-columns: repeat(2, 1fr);
  }
  @media (min-width: 1600px){
    grid-template-columns: repeat(4, 1fr);
  }
}

corpus-list{

  .list-header{
    grid-area: header;
    display: flex;
  }
  .toolbar{
    grid-area: toolbar;
    .section{
      display: flex;
      flex-direction: column;
      gap: 2px;
    }
  }

  .list-items{
    grid-area: content;
    padding: 0.5rem;
    display: flex;
    flex-direction: column;
    gap: 2px;
  }

  .search-box-input {
    flex-grow: 1;
    padding-right: 100px;
    margin-right: -100px;
    border-bottom: 1px solid var(--color-secondary-light);
    + .btn-addon{
      width: 100px;
      border-bottom: 1px solid var(--color-secondary-light);
    }
    &:focus + .btn-addon{
      border-bottom-color: transparent;
    }


  }
  .toolbar, .list-items{
    height: fit-content;
  }

  .list-items{
    width: 100%;
  }

  @media (max-width: 1024px){
    flex-direction: column;
    .list-tasks{
      width: 100%;
    }    
  }
}


scene-card{
  &.card-grid{
    padding :0;
  }

  &.card-list{
    padding: 0.2rem;
  }
}

.list-items{
  
  .list-item, .list-header{
      display: flex; 
      flex: 1 1 auto;
      gap: 1rem;
      white-space: nowrap;
      text-overflow: ellipsis;
      overflow: hidden;
      background: var(--color-element);
      padding: 1rem;
      border-color: transparent;
      border-width: 1px 0 1px 0;
  }

  .list-header{
    font-size: 1.2rem;
    font-weight: bold;
    padding: 1.2rem 1rem 0.8rem 1rem;
    color: var(--color-primary);
    border-bottom: 2px solid var(--color-primary);
  }

  .list-item{
    &:nth-child(2n){
      background: var(--color-section);
    }
    &:hover{
      background: var(--color-dark);
      filter: opacity(80%);
      border-color: var(--color-dark);
    }
  }
}

.users-list{
  .ui-button:hover{
    filter:brightness(1.5);
  }
  .ui-icon svg{
    height: 1.2rem;
  }
}

footer{
  color: var(--color-text);
  height: 44px;
  background-color: var(--color-section);
  display:flex;
}


.tabs{
  .tab{
    display: none;
    width: 100%;
    
    &:first-child:not(:has(~ .tab:target)),
    &:target {
      display: block;
    }
  }
}